// Possible Alert: Runtime over specific limit in specific time period for specific job, enhanced with variable via "let", which contains the runtime
DatabricksJobs
| where ActionName == "runStart"
| extend Subscription = split(_ResourceId, "/")[2]
| extend Ressourcegroup = split(_ResourceId, "/")[4]
| extend Workspace = split(_ResourceId, "/")[-1]
| extend JobId = tostring(parse_json(RequestParams).jobId)
| extend JobName = parse_json(RequestParams).taskKey
| extend TriggerType = tostring(parse_json(RequestParams).jobTriggerType)
| extend ClusterType = tostring(parse_json(RequestParams).jobClusterType)
| extend ClusterId = tostring(parse_json(RequestParams).clusterId)
| join (
    DatabricksJobs
    | where ActionName == "runSucceeded"
    | extend JobId = tostring(parse_json(RequestParams).jobId)
    | project TimeGeneratedEnd = TimeGenerated, JobId)
    on JobId
| join (
    DatabricksClusters
    | extend ClusterId = tostring(parse_json(RequestParams).clusterId)
    | extend ClusterName = parse_json(RequestParams).clusterName)
    on ClusterId
| order by TimeGenerated desc
| project
    TimeGenerated,
    TimeGeneratedEnd,
    tostring(Runtime) =  TimeGeneratedEnd - TimeGenerated,
    tostring(Subscription),
    tostring(Ressourcegroup),
    tostring(Workspace),
    tostring(JobName),
    tostring(JobId),
    tostring(TriggerType),
    tostring(ClusterType),
    tostring(ClusterId),
    tostring(ClusterName)